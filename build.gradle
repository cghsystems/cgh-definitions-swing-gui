apply plugin: 'eclipse'
apply plugin: 'groovy'

version = "2.0"
group = "net.cghsystems"

final SPRING_VERSION = '3.1.0.RELEASE'
final GROOVY_VERSION = "1.8.0"
final SPRING_INTEGRATION_VERSION = '2.1.0.RELEASE'

gradle.taskGraph.whenReady {taskGraph ->
    if (!taskGraph.hasTask(':release')) {
        version = "${version}-SNAPSHOT"
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.springsource.org/libs-snapshot" }
}

dependencies {

    groovy(group: 'org.codehaus.groovy', name: 'groovy-all', version: GROOVY_VERSION)

    //Spring required
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
    compile group: 'cglib', name: 'cglib', version: '2.2.2'
    compile group: 'log4j', name: 'log4j', version: '1.2.16'

    //Spring-core-required
    compile group: 'org.springframework', name: 'spring-context', version: SPRING_VERSION
    compile group: 'org.springframework', name: 'spring-core', version: SPRING_VERSION
    compile group: 'org.springframework', name: 'spring-beans', version: SPRING_VERSION
    compile group: 'org.springframework', name: 'spring-asm', version: SPRING_VERSION
    compile group: 'org.springframework', name: 'spring-expression', version: SPRING_VERSION
    compile group: 'org.springframework', name: 'spring-web', version: SPRING_VERSION
    compile group: 'org.springframework', name: 'spring-tx', version: SPRING_VERSION

    //Spring-Integration
    compile group: 'org.springframework.integration', name: 'spring-integration-core', version: SPRING_INTEGRATION_VERSION
    compile group: 'org.springframework.integration', name: 'spring-integration-http', version: SPRING_INTEGRATION_VERSION
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.7'

    testCompile 'org.mortbay.jetty:jetty:7.0.0.pre5'
    testCompile 'org.mortbay.jetty:jetty-webapp:7.0.0.pre4'
    testCompile group: 'junit', name: 'junit', version: '4.8.2'
    testCompile group: 'org.springframework', name: 'spring-test', version: SPRING_VERSION
    
}

//jar {
// from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//}

manifest.mainAttributes(
        'Implementation-Title': "Notebook",
        'Implementation-Version': version,
        'Main-Class' : "net.cghsystems.notes.Main"
        )

//task release(dependsOn: build) {
// def executionFile = new File("${notebookHome}", "${archivesBaseName}.bat")
// if(executionFile.exists()) executionFile.delete()
// executionFile << "start javaw -jar ${jar.archivePath.getAbsolutePath()} %1 %2 %3 %4"
//  println "Build Complete"
//}
